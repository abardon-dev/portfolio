name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    name: Setup and Install Dependencies
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.11.1
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache node_modules
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies with frozen lockfile
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

  checks:
    needs: setup
    name: Code quality checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.11.1
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run TypeScript check
        run: pnpm tsc

      - name: Run Prettier check
        run: pnpm run prettier:check

      - name: Run Lint check
        run: pnpm run lint

  build:
    needs: [setup, checks]
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.11.1
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build
